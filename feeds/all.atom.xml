<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Matteo's Website</title><link href="https:/" rel="alternate"></link><link href="https:///feeds/all.atom.xml" rel="self"></link><id>https:/</id><updated>2023-04-20T00:00:00-04:00</updated><entry><title>Look, I'm Just Going To Say It</title><link href="https:///look-im-just-going-to-say-it.html" rel="alternate"></link><published>2023-04-20T00:00:00-04:00</published><updated>2023-04-20T00:00:00-04:00</updated><author><name>Matteo Raso</name></author><id>tag:None,2023-04-20:/look-im-just-going-to-say-it.html</id><summary type="html">&lt;p&gt;"Neon Genesis Evangelion" was mid. I enjoyed it, and I certainly didn't regret watching it, but it's not the groundbreaking anime that everybody seems to think that it is. It's just a normal mecha with slightly deep themes. The plot was convoluted and a lot of questions get left unanswered …&lt;/p&gt;</summary><content type="html">&lt;p&gt;"Neon Genesis Evangelion" was mid. I enjoyed it, and I certainly didn't regret watching it, but it's not the groundbreaking anime that everybody seems to think that it is. It's just a normal mecha with slightly deep themes. The plot was convoluted and a lot of questions get left unanswered, which gives a lot of room for fan discussion but ultimately just made it a pain to watch at times. The ending was actually fantastic and redeemed the entire show for me, but then the studio decided to undermine that with a series of movies designed to please the fans that hated the ending. To be fair, I've heard that EoE was really good, but I've also heard a lot of bad things about Rebuild. I'll probably do a review of EoE one day, but that still doesn't change the fact that the original anime was underwhelming compared to its reputation.&lt;/p&gt;
&lt;p&gt;Oh, and it's super creepy how the fanbase is obsessed with discussing which 14 year old is hotter. Even if I was a hardcore fan, I would shy away from revealing that just because the fanbase is seriously that obsessed and I wouldn't want people to think that of me.&lt;/p&gt;</content><category term="Anime"></category></entry><entry><title>An Unusual Git Error I Got, And How to Fix it</title><link href="https:///an-unusual-git-error-i-got-and-how-to-fix-it.html" rel="alternate"></link><published>2023-04-16T00:00:00-04:00</published><updated>2023-04-16T00:00:00-04:00</updated><author><name>Matteo Raso</name></author><id>tag:None,2023-04-16:/an-unusual-git-error-i-got-and-how-to-fix-it.html</id><summary type="html">&lt;p&gt;Note: This article was originally written on Feburary 21, 2021.&lt;/p&gt;
&lt;p&gt;I was working on this game I've been programming for a while when I decided to add a little feature to let the player check how good the armor that they're wearing actually is. I commit, check the 'git status' …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Note: This article was originally written on Feburary 21, 2021.&lt;/p&gt;
&lt;p&gt;I was working on this game I've been programming for a while when I decided to add a little feature to let the player check how good the armor that they're wearing actually is. I commit, check the 'git status' to see if there was anything that I was missing, found nothing, and pushed to my Github repo. All in all, a pretty normal experience, until I noticed an extremely abnormal bug. Instead of pushing my code, Git said "fatal: unable to read 'messed_up_hash'". For some reason I still don't understand, Git expected the commit to be under a different hash than the one it was actually under. A bit unusual, so I look up solutions. I find several solutions to fix corrupted objects, but none of them worked for me, since they assume that the hash is actually there (I checked my .git directory, there really wasn't a hash there). This brought me to what looked like the only solution I hadn't tried: delete the repo, pull from Github, and accept losing your unpushed commits. This isn't exactly a bad solution, since it works and it's easy to do, but it assumes best practice. I have (or at least had, now that this scare has fixed me up) a habit where I let commits pile up before pushing. This is not best practice. I had 8 commits piled up, one of which was extremely important and took a considerable amount of time to figure out. Dumping it wasn't an option as far as I'm concerned.&lt;/p&gt;
&lt;p&gt;Here I decided to keep looking for solutions to my problem. Thankfully, I found one other person who had my exact same problem: Jim Schubert.  In a 2012 post on &lt;a href="https://www.ipreferjim.com/2012/02/git-push-fatal-unable-to-read-sha1/"&gt;his website&lt;/a&gt;, almost down to the exact same day that I had the problem, Jim outlines a way to fix the problem by writing the hash to Git. It's a reasonable fix, but with one problem: it didn't work on my repo. Again, no idea why, since there's no reason why it wouldn't work, but computers don't always act in logical ways. Yet again, I had to search for answers.&lt;/p&gt;
&lt;p&gt;Suddenly, it hit me: why not just get rid of the commit? I use 'git reset' to remove it, only to find out that it needs the non-existent hash in order to remove it. Great. At this point, I'm trying to find out how to remove a commit without directly interacting with the commit when I finally find my solution: backup the problematic file, use 'git rm' to get rid of it, use your text editor of choice on the copy to undo whatever changes you made, rename the copy as the original file, use 'git add', and then run 'git commit --amend --allow-empty'. Your commit still stays, and will probably always stay, but now Git won't give you any problems about missing hashes. After running those commands, I was finally able to push to my Github repo. Here's hoping I never have to do this again.&lt;/p&gt;</content><category term="Technology"></category></entry><entry><title>Free Software Isn't Free</title><link href="https:///free-software-isnt-free.html" rel="alternate"></link><published>2023-04-16T00:00:00-04:00</published><updated>2023-04-16T00:00:00-04:00</updated><author><name>Matteo Raso</name></author><id>tag:None,2023-04-16:/free-software-isnt-free.html</id><summary type="html">&lt;p&gt;Note: This article was originally written on December, 12, 2020.&lt;/p&gt;
&lt;p&gt;The title for this post sounds like a contradiction. How can something be free yet not free? That's because English is a little bit weird. Other languages (like Italian) don't have a word for free. Most romance languages have a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Note: This article was originally written on December, 12, 2020.&lt;/p&gt;
&lt;p&gt;The title for this post sounds like a contradiction. How can something be free yet not free? That's because English is a little bit weird. Other languages (like Italian) don't have a word for free. Most romance languages have a word called (or derived from) "gratis", which refers to no price, and a word called (or dervived from) "libre", which means no restrictions. You've probably noticed that many free software have "libre" in their name. That's because the "free" in free software is about the freedom given to the user, not that the software is gratis. When I say "Free software isn't free", I mean that libre software isn't gratis and gratis software isn't free.&lt;/p&gt;
&lt;p&gt;Of course, there are times when software is both libre and gratis. I'm not entirely sure I've ever seen libre software that wasn't also gratis, although I've seen many, many software that is gratis but not libre. I feel like this ambiguity has actually been one of the biggest barriers to widespread adoption of free software. I constantly see criticism of free software from people saying that you're the product when you use free software, people saying that free software advocates are just cheap, and even people saying that free software is communist. At the same time, programmers feel like it's not worth their time to program free software, because they think it's gratis and programmers obviously have to get paid if they want it to be a full-time job. Don't get me wrong, I love that I don't really have to pay for any of my software, but being gratis is just a secondary benefit of free software. If the Linux Foundation were to turn around tomorrow and say that they were going to charge people a fee to use any future version of the kernel (and they absolutely could under the GPL), I would probably pay for it. That's because what I ultimately want is software that respects my freedoms as a consumer.&lt;/p&gt;
&lt;p&gt;According the the Free Software Foundation, free software has to obey four freedoms: the user must be able to use it however they want, the user must be allowed to study the source code, the user must be allowed to redistribute the software, and the user must be able to modify the software. You don't even need to make the code open-source, since the GPL itself even says that it's okay to make the code available to customers on request only, so long as you don't charge more than the cost to send it to them. These aren't radical new freedoms, if you really think about it. Let's say you buy a record player (if they even still make those). Obviously, the company can't sell it to you if it doesn't work, and the customer can always use it in unconventional ways like using it as a really large paperweight or for benchpressing without restriction by the company, so it follows freedom 0. If the customer wants, they can always take the record player apart and see how it works inside, so we also have freedom 1. You can always give it away or sell it if you don't want it anymore without restriction, so the user also has freedom 2. Finally, the user can make a new piece for the record player in his very convienent blacksmithing forge and use it to modify the record player, so the user has freedom 4. The idea that a customer wouldn't be able to have all four of these freedoms is a pretty new idea, and one that I don't like.&lt;/p&gt;
&lt;p&gt;Of course, software is different from a record player, since a record player requires a lot more effort to duplicate than software. However, people have had a long history of distributing intellectual property. Every library you go to is based on the belief that books can and should be available to everybody free of charge. In fact, libraries even profit off of books by charging fees if you don't return them in time. Now that we have ebooks, libraries even give away the books for the "borrower" to keep, free of charge. In many ways, librarians were the free software advocates before software was invented. Of course, people have been able to get software for free (gratis) for a long time now, thanks to torrenting. Still, the companies who made the software (or the song, game, movie, etc etc) still do just fine, because a significant amount of people still choose to buy the software out of ethical reasons. Removing restrictions on redistributing software shouldn't change this all that much. If somebody takes your software and improves it by such a significant amount that people buy their version instead of yours, then it's your fault for releasing an inferior product and you should release a new patch so your software is even better than the fork. That's just how the free market works, baby. Either way, the consumers come out on top from this, since the increased competion means that companies have no choice but to make their software even better instead of staying mediocre.&lt;/p&gt;
&lt;p&gt;Ultimately, the biggest problem with non-libre software is that you're the product. Just look at Windows. Even though you pay for it (probably not directly, but it's bundled into the cost of your computer), it still gives you ads and comes pre-installed with awful games that paid off Microsoft. Not only that, they collect your data through telemetry to use for market research and then sell it to all sorts of companies who also want to use your data to study. You are paying to be a walking commodity for massive corporations who risk YOUR data being stolen or falling into the wrong hands so THEY can turn a profit. You can't do that with free software. If somebody tries to create software that shoves unskippable ads down your throat or steals your data, then somebody will modify the software to disable these features and distribute their version themselves. Maybe you disagree with me, and that's okay. All I know is is that my experience with computers have gotten much better since I've started to use free software.&lt;/p&gt;</content><category term="Technology"></category></entry><entry><title>Hello, World!</title><link href="https:///hello-world.html" rel="alternate"></link><published>2023-03-27T00:00:00-04:00</published><updated>2023-03-27T00:00:00-04:00</updated><author><name>Matteo Raso</name></author><id>tag:None,2023-03-27:/hello-world.html</id><content type="html">&lt;p&gt;This is the first post for my new and improved website (there was an old one, but it was garbage). Not sure what I'll be posting here, probably mostly updates on any projects I'm working on.&lt;/p&gt;</content><category term="Misc"></category></entry></feed>